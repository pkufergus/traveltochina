<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCACWAHADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/j/P+e/40UUUAFH+f8/5/nRRQAf5/wA/5/lR/n/P+feiv5Tv
        +C//APwWHvfgXZ+KP2Fv2b9X1TSvjLrujaQ3xi+KOh6reaPqHwu8P65b2OuWXhHwnqGm3EF9H428UaFN
        azavqcc0Mfh7wxq8cVoZ9a1YT6D1YPB1sdiIYeirylrKT+GnBNKVSX92N15ttRWrSPn+J+JMt4UyfE5x
        mdTlo0VyUaMWvbYzFTjJ0cJQT3q1XCWr92nTjOrUap05Nd//AMFSP+Dh/wAF/sr+K/F37Pv7KPhnSfip
        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
</value>
  </data>
</root>